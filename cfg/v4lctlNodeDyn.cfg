#!/usr/bin/env python
PACKAGE = "uavc_v4lctl"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

input_enum = gen.enum([
  gen.const("Composite0", str_t, "Composite0", "Composite0"),
  gen.const("Composite1", str_t, "Composite1", "Composite1"),
  gen.const("Composite2", str_t, "Composite2", "Composite2"),
  gen.const("Composite3", str_t, "Composite3", "Composite3"),
],"Input")

norm_enum = gen.enum([
#  gen.const("NTSC",      str_t, "NTSC", "NTSC"),
  gen.const("NTSC_MC",   str_t, "NTSC-M", "NTSC-M"),
  gen.const("NTSC_M_JP", str_t, "NTSC-M-JP", "NTSC-M-JP"),
  gen.const("NTSC_M_KR", str_t, "NTSC-M-KR", "NTSC-M-KR"),
#  gen.const("PAL",       str_t, "PAL", "PAL"),
  gen.const("PAL_BG",    str_t, "PAL-BG", "PAL-BG"),
  gen.const("PAL_H",     str_t, "PAL-H", "PAL-H"),
  gen.const("PAL_I",     str_t, "PAL-I", "PAL-I"),
  gen.const("PAL_DK",    str_t, "PAL-DK", "PAL-DK"),
  gen.const("PAL_M",     str_t, "PAL-M", "PAL-M"),
  gen.const("PAL_N",     str_t, "PAL-N", "PAL-N"),
  gen.const("PAL_Nc",    str_t, "PAL-Nc", "PAL-Nc"),
  gen.const("PAL_60",    str_t, "PAL-60", "PAL-60"),
  gen.const("SECAM_Lc",  str_t, "SECAM-Lc", "SECAM-Lc"),
  gen.const("SECAM_B",   str_t, "SECAM-B", "SECAM-B"),
  gen.const("SECAM_G",   str_t, "SECAM-G", "SECAM-G"),
  gen.const("SECAM_H",   str_t, "SECAM-H", "SECAM-H"),
],"Norm")

gen.add("input", str_t, 0, "Input", "Composite0", edit_method=input_enum)
gen.add("norm",  str_t, 0, "Norm", "PAL-I", edit_method=norm_enum)

gen.add("bright",   int_t, 50, "Brightness", 100, 0, 100)
gen.add("contrast", int_t, 50, "Contrast", 100, 0, 100)
gen.add("color",    int_t, 50, "Color", 100, 0, 100)
gen.add("hue",      int_t, 50, "Hue", 100, 0, 100)

gen.add("UV_Ratio",         int_t, 50, "UV Ratio", 100, 0, 100)
gen.add("Whitecrush_Lower", int_t, 50, "Whitecrush Lower", 100, 0, 100)
gen.add("Whitecrush_Upper", int_t, 50, "Whitecrush Upper", 100, 0, 100)
gen.add("Coring",           int_t, 50, "Coring", 100, 0, 3)

gen.add("Full_Luma",    bool_t, 0, "Full Luma Range",  False)
gen.add("AGC_Crush",    bool_t, 0, "AGC Crush",  True)
gen.add("mute",         bool_t, 0, "mute",  True)
gen.add("Chroma_AGC",   bool_t, 0, "Chroma AGC",  False)
gen.add("Color_Killer", bool_t, 0, "Color Kill",  False)
gen.add("Comb_Filter",  bool_t, 0, "Show spot temperature",  False)
gen.add("Auto_Mute",    bool_t, 0, "Auto Mute",  True)
gen.add("Luma_Decim",   bool_t, 0, "Luma Decimation Filter",  False)
gen.add("VCR_Hack",     bool_t, 0, "VCR Hack",  False)
gen.add("Set_Defaults", bool_t, 0, "Set all parameter to default values",  False)


# name / type / level / description / default / min / max
#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
#gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

exit(gen.generate(PACKAGE, "uavc_v4lctl", "v4lctlNodeDyn"))
